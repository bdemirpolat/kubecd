// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	models "github.com/bdemirpolat/kubecd/models"
	mock "github.com/stretchr/testify/mock"
)

// ServiceInterface is an autogenerated mock type for the ServiceInterface type
type ServiceInterface struct {
	mock.Mock
}

// CreateService provides a mock function with given fields: req
func (_m *ServiceInterface) CreateService(req models.ApplicationCreateReq) (*models.ApplicationCreateRes, error) {
	ret := _m.Called(req)

	var r0 *models.ApplicationCreateRes
	if rf, ok := ret.Get(0).(func(models.ApplicationCreateReq) *models.ApplicationCreateRes); ok {
		r0 = rf(req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.ApplicationCreateRes)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(models.ApplicationCreateReq) error); ok {
		r1 = rf(req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteService provides a mock function with given fields: req
func (_m *ServiceInterface) DeleteService(req models.ApplicationDeleteReq) (*models.ApplicationDeleteRes, error) {
	ret := _m.Called(req)

	var r0 *models.ApplicationDeleteRes
	if rf, ok := ret.Get(0).(func(models.ApplicationDeleteReq) *models.ApplicationDeleteRes); ok {
		r0 = rf(req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.ApplicationDeleteRes)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(models.ApplicationDeleteReq) error); ok {
		r1 = rf(req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetService provides a mock function with given fields: req
func (_m *ServiceInterface) GetService(req models.ApplicationGetReq) (*models.ApplicationGetRes, error) {
	ret := _m.Called(req)

	var r0 *models.ApplicationGetRes
	if rf, ok := ret.Get(0).(func(models.ApplicationGetReq) *models.ApplicationGetRes); ok {
		r0 = rf(req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.ApplicationGetRes)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(models.ApplicationGetReq) error); ok {
		r1 = rf(req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListService provides a mock function with given fields: req
func (_m *ServiceInterface) ListService(req models.ApplicationListReq) (*models.ApplicationListRes, error) {
	ret := _m.Called(req)

	var r0 *models.ApplicationListRes
	if rf, ok := ret.Get(0).(func(models.ApplicationListReq) *models.ApplicationListRes); ok {
		r0 = rf(req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.ApplicationListRes)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(models.ApplicationListReq) error); ok {
		r1 = rf(req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateService provides a mock function with given fields: req
func (_m *ServiceInterface) UpdateService(req models.ApplicationUpdateReq) (*models.ApplicationUpdateRes, error) {
	ret := _m.Called(req)

	var r0 *models.ApplicationUpdateRes
	if rf, ok := ret.Get(0).(func(models.ApplicationUpdateReq) *models.ApplicationUpdateRes); ok {
		r0 = rf(req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.ApplicationUpdateRes)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(models.ApplicationUpdateReq) error); ok {
		r1 = rf(req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
